BufEnter(10)
  new Mode(i:10)
Trigger(add) Mode(i:10) <C-R>
new Mode(n:10)
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(11)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(12)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(13)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(14)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(15)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(16)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(17)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(18)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(19)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(20)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(21)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(22)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(23)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(24)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(25)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(26)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(27)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(28)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(29)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(30)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(31)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(32)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(33)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(34)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(35)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(36)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(37)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(38)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(39)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(40)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(41)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(42)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(43)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(44)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(45)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(46)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(47)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(48)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(49)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(50)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(51)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(52)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(53)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(54)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(55)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(56)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(57)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(58)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(59)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(60)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(61)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(62)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(63)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(64)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(65)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(66)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(67)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(68)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(69)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(70)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(71)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(72)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(73)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(74)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(75)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(76)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(77)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(78)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(79)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(80)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(81)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(82)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(83)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(84)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(85)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(86)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(87)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(88)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(89)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(90)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(91)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(92)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(93)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(94)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(95)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(96)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(97)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(98)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(99)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(100)
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <Space>
  State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
    update Mode(n:10)
    continue: <Space> Mode(n:10)
    getchar
    on_key: f
    got: f
    continue: <Space>f Mode(n:10)
    getchar
    on_key: b
    got: b
    suspend: Mode(n:10)
    Trigger(del) Mode(n:10) z ' ` " z= g' g` g ] [ <Space> <Plug> <C-W>
    feedkeys: Mode(n:10) <Space>fb
  on_key: <Space>fb
  BufEnter(10)
  BufNew(111)
  BufReadPost(111)
  BufEnter(111)
    new Mode(i:111)
  ModeChanged(i:n)
    new Mode(n:111)
    Safe(true)
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  Trigger(add) Mode(i:111) <C-R>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: k
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: j
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:111)
    continue: g Mode(n:111)
    getchar
    got: k
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
    feedkeys: Mode(n:111) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: :
  ModeChanged(n:c)
    new Mode(c:111)
    Safe(true)
  Trigger(add) Mode(c:111) <C-R>
  on_key: q
  on_key: <CR>
  ModeChanged(c:n)
    Unsafe(command-mode)
    suspend: Mode(n:111)
    Trigger(del) Mode(n:111) <C-W> ' ` " z= g' g` z g ] [ <Space> <Plug>
  Trigger(add) Mode(n:111) ' ` " z= g' g` z g ] [ <Space> <Plug> <C-W>
BufEnter(10)
  new Mode(i:10)
Trigger(add) Mode(i:10) <C-R>
new Mode(n:10)
Trigger(add) Mode(n:10) " ' ` g' g` z= [ <Plug> g z <Space> <C-W> ]
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) " ` g' g` z= ' [ <Plug> g z <Space> <C-W> ]
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) " ' ` g' g` z= [ <Plug> g z <Space> <C-W> ]
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) " ` g' g` z= ' [ <Plug> g z <Space> <C-W> ]
  feedkeys: Mode(n:10) gg
on_key: g
on_key: g
Trigger(add) Mode(n:10) " ' ` g' g` z= [ <Plug> g z <Space> <C-W> ]
on_key: V
ModeChanged(n:V)
  new Mode(x:10)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:10)
    continue:  Mode(x:10)
    getchar
    Trigger(add) Mode(x:10) " ] [ g z <C-W>
    on_key: G
    got: G
    suspend: Mode(x:10)
    Trigger(del) Mode(x:10) " ] [ <C-W> z g
    feedkeys: Mode(x:10) G
on_key: G
Trigger(add) Mode(x:10) " ] [ g z <C-W>
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  new Mode(c:10)
  Safe(true)
Trigger(add) Mode(c:10) <C-R>
on_key: w
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) " ` g' g` z= [ <Plug> g z <Space> <C-W> ] '
Trigger(add) Mode(n:10) " ' ` g' g` z= [ <Plug> g z <Space> <C-W> ]
BufEnter(10)
  new Mode(i:10)
ModeChanged(i:n)
  new Mode(n:10)
  Safe(true)
Trigger(add) Mode(n:10) ' ` " z= g' g` z <Space> g ] [ <Plug> <C-W>
Trigger(add) Mode(i:10) <C-R>
on_key: :
ModeChanged(n:c)
  new Mode(c:10)
  Safe(true)
Trigger(add) Mode(c:10) <C-R>
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` " z= g' g` z <Space> g ] [ <Plug> <C-W>
Trigger(add) Mode(n:10) ' ` " z= g' g` z <Space> g ] [ <Plug> <C-W>
BufEnter(11)
  new Mode(i:11)
Trigger(add) Mode(i:11) <C-R>
new Mode(n:11)
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gg
on_key: g
on_key: g
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(12)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(13)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(14)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(15)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(16)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(17)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(18)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(19)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(20)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(21)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(22)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(23)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(24)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(25)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(26)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(27)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(28)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(29)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(30)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(31)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(32)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(33)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(34)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(35)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(36)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(37)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(38)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(39)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(40)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(41)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(42)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(43)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(44)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(45)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(46)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(47)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(48)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(49)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(50)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(51)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(52)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(53)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(54)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(55)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(56)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(57)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(58)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(59)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(60)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(61)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(62)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(63)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(64)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(65)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(66)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(67)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(68)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(69)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(70)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(71)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(72)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(73)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(74)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(75)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(76)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(77)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(78)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(79)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(80)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(81)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(82)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(83)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(84)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(85)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(86)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(87)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(88)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(89)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(90)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(91)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(92)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(93)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(94)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(95)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(96)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(97)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(98)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(99)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(100)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(101)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(102)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(103)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(104)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(105)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(106)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(107)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(108)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(109)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(110)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(111)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(112)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(113)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(114)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(115)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(116)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(117)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(118)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(119)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(120)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(121)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(122)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(123)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(124)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(125)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(126)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(127)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(128)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(129)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(130)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(131)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(132)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(133)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(134)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(135)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(136)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(137)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(138)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(139)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(140)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(141)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(142)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(143)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(144)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(145)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(146)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(147)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(148)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(149)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(150)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(151)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(152)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(153)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(154)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(155)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(156)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(157)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(158)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(159)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(160)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(161)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(162)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(163)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(164)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(165)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(166)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(167)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(168)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(169)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(170)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(171)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(172)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(173)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(174)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(175)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(176)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(177)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(178)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(179)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(180)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(181)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(182)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(183)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(184)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(185)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(186)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(187)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(188)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(189)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(190)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(191)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(192)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(193)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(194)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(195)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(196)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(197)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(198)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(199)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(200)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(201)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(202)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(203)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(204)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(205)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(206)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(207)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(208)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(209)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(210)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(211)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(212)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(213)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(214)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(215)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(216)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(217)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(218)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(219)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(220)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(221)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(222)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(223)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(224)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(225)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(226)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(227)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(228)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(229)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(230)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(231)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(232)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(233)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(234)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(235)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(236)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(237)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(238)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(239)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(240)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(241)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(242)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(243)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(244)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(245)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(246)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(247)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(248)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(249)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(250)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(251)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(252)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(253)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(254)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(255)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(256)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(257)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(258)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(259)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(260)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(261)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(262)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(263)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(264)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(265)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(266)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(267)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(268)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(269)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(270)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(271)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(272)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(273)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(274)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(275)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(276)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(277)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(278)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(279)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(280)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(281)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  BufNew(282)
  on_key: <C-C>
  on_key: <C-C>
  on_key: <Space>
  State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
    update Mode(n:11)
    continue: <Space> Mode(n:11)
    getchar
    on_key: f
    got: f
    continue: <Space>f Mode(n:11)
    getchar
    on_key: b
    got: b
    suspend: Mode(n:11)
    Trigger(del) Mode(n:11) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:11) <Space>fb
  on_key: <Space>fb
  BufEnter(11)
  BufNew(295)
  BufReadPost(295)
  BufEnter(295)
    new Mode(i:295)
  ModeChanged(i:n)
    new Mode(n:295)
    Safe(true)
  Trigger(add) Mode(i:295) <C-R>
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: j
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: j
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gj
  on_key: g
  on_key: j
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: k
  State(start): Mode(n:0) Node(g) { keys = "g" }
    update Mode(n:295)
    continue: g Mode(n:295)
    getchar
    got: k
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
    feedkeys: Mode(n:295) gk
  on_key: g
  on_key: k
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  on_key: :
  ModeChanged(n:c)
    new Mode(c:295)
    Safe(true)
  Trigger(add) Mode(c:295) <C-R>
  on_key: q
  on_key: <CR>
  ModeChanged(c:n)
    Unsafe(command-mode)
    suspend: Mode(n:295)
    Trigger(del) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
  Trigger(add) Mode(n:295) ' ` " g' g` z= <Plug> g z ] [ <Space> <C-W>
BufEnter(10)
  new Mode(i:10)
Trigger(add) Mode(i:10) <C-R>
new Mode(n:10)
Trigger(add) Mode(n:10) " ' ` z= g' g` z <Plug> <Space> <C-W> g ] [
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) " ' ` z= g' g` z <Plug> <Space> <C-W> g ] [
  feedkeys: Mode(n:10) gg
on_key: g
on_key: g
Trigger(add) Mode(n:10) " ' ` z= g' g` z <Plug> <Space> <C-W> g ] [
on_key: V
ModeChanged(n:V)
  new Mode(x:10)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:10)
    continue:  Mode(x:10)
    getchar
    Trigger(add) Mode(x:10) " [ <C-W> g ] z
    on_key: G
    got: G
    suspend: Mode(x:10)
    Trigger(del) Mode(x:10) " [ z ] g <C-W>
    feedkeys: Mode(x:10) G
on_key: G
Trigger(add) Mode(x:10) " [ <C-W> g ] z
on_key: y
ModeChanged(V:n)
  Safe(true)
on_key: <LeftRelease>
on_key: <LeftDrag>
on_key: <LeftRelease>
on_key: :
ModeChanged(n:c)
  new Mode(c:10)
  Safe(true)
Trigger(add) Mode(c:10) <C-R>
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) " ' ` z= g` z <Plug> <Space> <C-W> g ] [ g'
Trigger(add) Mode(n:10) " ' ` z= g' g` z <Plug> <Space> <C-W> g ] [
BufEnter(6)
  new Mode(n:6)
Trigger(add) Mode(c:5) <C-R>
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gg
on_key: g
on_key: g
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: V
ModeChanged(n:V)
  new Mode(x:6)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:6)
    continue:  Mode(x:6)
    getchar
    Trigger(add) Mode(x:6) " g [ z ] <C-W>
    on_key: j
    got: j
    suspend: Mode(x:6)
    Trigger(del) Mode(x:6) " g [ z ] <C-W>
    feedkeys: Mode(x:6) j
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: k
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: k
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gk
on_key: g
on_key: k
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: V
ModeChanged(n:V)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:6)
    continue:  Mode(x:6)
    getchar
    on_key: j
    got: j
    suspend: Mode(x:6)
    Trigger(del) Mode(x:6) " g [ z ] <C-W>
    feedkeys: Mode(x:6) j
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:6)
  continue: g Mode(x:6)
  getchar
  got: j
  suspend: Mode(x:6)
  Trigger(del) Mode(x:6) " g [ z ] <C-W>
  feedkeys: Mode(x:6) gj
on_key: g
on_key: j
Trigger(add) Mode(x:6) " g [ z ] <C-W>
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: d
ModeChanged(n:no)
  new Mode(o:6)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:6)
    continue:  Mode(o:6)
    getchar
    Trigger(add) Mode(o:6) g ] [
    on_key: d
    got: d
    suspend: Mode(o:6)
    Trigger(del) Mode(o:6) g ] [
    feedkeys: Mode(o:6) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:6) g ] [
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: z
State(start): Mode(n:0) Node(z) { keys = "z" }
  update Mode(n:6)
  continue: z Mode(n:6)
  getchar
  on_key: <CR>
  got: <CR>
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) z<CR>
on_key: z
on_key: <CR>
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: q
on_key: j
RecordingEnter
Trigger(del) Mode(x:6) " g [ z ] <C-W>
Trigger(del) Mode(o:6) g ] [
Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
new Mode(n:6)
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g <Space> [ ] z <Plug> ` ' " g` g'
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: q
RecordingLeave
on_key: f
on_key: j
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <LeftRelease>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:6)
  continue: <Space> Mode(n:6)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:6)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) z= <C-W> g [ z <Space> ] <Plug> ` g' ' " g`
  feedkeys: Mode(n:6) <Space>fb
on_key: <Space>fb
BufEnter(6)
  new Mode(i:6)
BufNew(19)
BufReadPost(19)
BufEnter(19)
  new Mode(i:19)
ModeChanged(i:n)
  new Mode(n:19)
  Safe(true)
Trigger(add) Mode(i:19) <C-R>
Trigger(add) Mode(i:6) <C-R>
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) ' " g` g' z= g <Space> [ <C-W> ] z <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: x
ModeChanged(n:no)
  new Mode(o:19)
  Unsafe(pending "l")
  suspend: Mode(o:19)
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:19) g ] [
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:19)
  Trigger(del) Mode(o:19) ] g [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:19) g ] [
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: u
on_key: u
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:19)
  Trigger(del) Mode(o:19) ] g [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:19) g ] [
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:19)
  Trigger(del) Mode(o:19) ] g [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:19) g ] [
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:19)
  Trigger(del) Mode(o:19) ] g [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:19) g ] [
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:19)
  Trigger(del) Mode(o:19) ] g [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:19) g ] [
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: j
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gj
on_key: g
on_key: j
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:19)
  continue: g Mode(n:19)
  getchar
  got: k
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) gk
on_key: g
on_key: k
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: z
State(start): Mode(n:0) Node(z) { keys = "z" }
  update Mode(n:19)
  continue: z Mode(n:19)
  getchar
  on_key: <CR>
  got: <CR>
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) z<CR>
on_key: z
on_key: <CR>
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <C-F>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:19)
  continue: <Space> Mode(n:19)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:19)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z ' " g` g' z= g <Space> <C-W> [ ] <Plug> `
  feedkeys: Mode(n:19) <Space>fb
on_key: <Space>fb
BufEnter(19)
BufNew(34)
BufReadPost(34)
BufEnter(34)
  new Mode(i:34)
Trigger(add) Mode(i:34) <C-R>
new Mode(n:34)
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <C-V>
ModeChanged(n:)
  new Mode(x:34)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:34)
    continue:  Mode(x:34)
    getchar
    Trigger(add) Mode(x:34) " g [ z ] <C-W>
    on_key: G
    got: G
    suspend: Mode(x:34)
    Trigger(del) Mode(x:34) g [ <C-W> ] z "
    feedkeys: Mode(x:34) G
on_key: G
Trigger(add) Mode(x:34) " g [ z ] <C-W>
on_key: l
on_key: x
ModeChanged(:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  new Mode(c:34)
  Safe(true)
Trigger(add) Mode(c:34) <C-R>
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: k
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gk
on_key: g
on_key: k
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: u
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:34)
  continue: g Mode(n:34)
  getchar
  got: j
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) gj
on_key: g
on_key: j
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <C-V>
ModeChanged(n:)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:34)
    continue:  Mode(x:34)
    getchar
    on_key: G
    got: G
    suspend: Mode(x:34)
    Trigger(del) Mode(x:34) g [ <C-W> ] z "
    feedkeys: Mode(x:34) G
on_key: G
Trigger(add) Mode(x:34) " g [ z ] <C-W>
on_key: l
on_key: c
ModeChanged(:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:34)
  Trigger(del) Mode(i:34) <C-R>
Trigger(add) Mode(i:34) <C-R>
on_key: j
on_key: k
on_key: <BS>
on_key: <BS>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
Trigger(add) Mode(n:34) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:34)
  continue: <Space> Mode(n:34)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:34)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:34)
  Trigger(del) Mode(n:34) z= g <Space> [ <Plug> z ] <C-W> g' g` " ' `
  feedkeys: Mode(n:34) <Space>fb
on_key: <Space>fb
BufEnter(34)
BufNew(52)
BufReadPost(52)
BufEnter(52)
  new Mode(i:52)
Trigger(add) Mode(i:52) <C-R>
new Mode(n:52)
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: z
State(start): Mode(n:0) Node(z) { keys = "z" }
  update Mode(n:52)
  continue: z Mode(n:52)
  getchar
  on_key: <CR>
  got: <CR>
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) z<CR>
on_key: z
on_key: <CR>
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: G
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: h
on_key: h
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: h
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:52)
  continue: <Space> Mode(n:52)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:52)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] z <Plug> g ' ` " g` g' z= <Space> [
  feedkeys: Mode(n:52) <Space>fb
on_key: <Space>fb
BufEnter(52)
BufNew(65)
BufReadPost(65)
BufEnter(65)
  new Mode(i:65)
ModeChanged(i:n)
  new Mode(n:65)
  Safe(true)
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
Trigger(add) Mode(i:65) <C-R>
on_key: <LeftRelease>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: j
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gj
on_key: g
on_key: j
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: j
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gj
on_key: g
on_key: j
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: j
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gj
on_key: g
on_key: j
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: j
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gj
on_key: g
on_key: j
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: j
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gj
on_key: g
on_key: j
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: :
ModeChanged(n:c)
  new Mode(c:65)
  Safe(true)
Trigger(add) Mode(c:65) <C-R>
on_key: n
on_key: v
on_key: i
on_key: m
on_key: w
on_key: i
on_key: <Tab>
on_key: <BS>
on_key: <BS>
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Esc>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:65)
  continue: g Mode(n:65)
  getchar
  got: k
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) gk
on_key: g
on_key: k
Trigger(add) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:65)
  continue: <Space> Mode(n:65)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:65)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) <C-W> ] z <Plug> [ <Space> g z= g' g` " ' `
  feedkeys: Mode(n:65) <Space>fb
on_key: <Space>fb
BufEnter(65)
ModeChanged(i:n)
  Safe(true)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:65)
  continue: <Space> Mode(n:65)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:65)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:65)
  Trigger(del) Mode(n:65) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:65) <Space>fb
on_key: <Space>fb
BufEnter(91)
  new Mode(i:91)
BufNew(92)
Trigger(add) Mode(i:91) <C-R>
BufNew(93)
BufEnter(93)
  new Mode(i:93)
Trigger(add) Mode(i:93) <C-R>
on_key: <Esc>
BufEnter(91)
ModeChanged(i:n)
  new Mode(n:91)
  Safe(true)
Trigger(add) Mode(n:91) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:91)
  continue: <Space> Mode(n:91)
  getchar
  on_key: b
  got: b
  continue: <Space>b Mode(n:91)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:91)
  Trigger(del) Mode(n:91) <C-W> ] z <Plug> [ <Space> g z= g' ` ' " g`
  feedkeys: Mode(n:91) <Space>be
on_key: <Space>b
on_key: e
Trigger(add) Mode(n:91) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Esc>
on_key: <Esc>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:91)
  continue: <Space> Mode(n:91)
  getchar
  on_key: b
  got: b
  continue: <Space>b Mode(n:91)
  getchar
  on_key: d
  got: d
  suspend: Mode(n:91)
  Trigger(del) Mode(n:91) <C-W> ] z <Plug> [ <Space> g z= g' ` ' " g`
  feedkeys: Mode(n:91) <Space>bd
on_key: <Space>bd
BufEnter(52)
Trigger(add) Mode(n:91) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: /
ModeChanged(n:c)
  new Mode(c:52)
  Safe(true)
Trigger(add) Mode(c:52) <C-R>
on_key: w
on_key: i
on_key: n
on_key: d
on_key: o
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: V
ModeChanged(n:V)
  new Mode(x:52)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:52)
    continue:  Mode(x:52)
    getchar
    Trigger(add) Mode(x:52) " g [ z ] <C-W>
    on_key: j
    got: j
    suspend: Mode(x:52)
    Trigger(del) Mode(x:52) <C-W> ] z [ " g
    feedkeys: Mode(x:52) j
on_key: j
Trigger(add) Mode(x:52) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:52)
  continue: g Mode(x:52)
  getchar
  got: j
  suspend: Mode(x:52)
  Trigger(del) Mode(x:52) <C-W> ] z [ " g
  feedkeys: Mode(x:52) gj
on_key: g
on_key: j
Trigger(add) Mode(x:52) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:52)
  continue: g Mode(x:52)
  getchar
  got: j
  suspend: Mode(x:52)
  Trigger(del) Mode(x:52) <C-W> ] z [ " g
  feedkeys: Mode(x:52) gj
on_key: g
on_key: j
Trigger(add) Mode(x:52) " g [ z ] <C-W>
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:52)
  continue: g Mode(x:52)
  getchar
  got: j
  suspend: Mode(x:52)
  Trigger(del) Mode(x:52) <C-W> ] z [ " g
  feedkeys: Mode(x:52) gj
on_key: g
on_key: j
Trigger(add) Mode(x:52) " g [ z ] <C-W>
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:52)
  continue: <Space> Mode(n:52)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:52)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) <C-W> ] <Plug> z ' ` " g` g' z= g <Space> [
  feedkeys: Mode(n:52) <Space>fb
on_key: <Space>fb
BufEnter(52)
BufNew(107)
BufReadPost(107)
BufEnter(107)
  new Mode(i:107)
ModeChanged(i:n)
  new Mode(n:107)
  Safe(true)
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
Trigger(add) Mode(i:107) <C-R>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: k
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gk
on_key: g
on_key: k
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:107)
  continue: g Mode(n:107)
  getchar
  got: j
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) gj
on_key: g
on_key: j
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:107)
  continue: <Space> Mode(n:107)
  getchar
  on_key: b
  got: b
  continue: <Space>b Mode(n:107)
  getchar
  on_key: d
  got: d
  suspend: Mode(n:107)
  Trigger(del) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
  feedkeys: Mode(n:107) <Space>bd
on_key: <Space>bd
BufEnter(52)
Trigger(add) Mode(n:107) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: t
on_key: w
on_key: i
on_key: l
on_key: <Tab>
on_key: <Tab>
on_key: n
on_key: <BS>
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Tab>
on_key: <BS>
on_key: <BS>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: t
on_key: w
on_key: i
on_key: l
on_key: <Tab>
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
on_key: n
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <M-n>
on_key: <M-n>
on_key: ˜
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: T
on_key: w
on_key: i
on_key: l
on_key: i
on_key: g
on_key: h
on_key: t
on_key: <Tab>
on_key: E
on_key: n
on_key: a
on_key: b
on_key: l
on_key: e
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <Esc>
on_key: f
on_key: <Esc>
on_key: <Esc>
on_key: <Esc>
on_key: <Esc>
on_key: <C-F>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <C-J>
on_key: <C-J>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: j
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gj
on_key: g
on_key: j
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) " g` g' z= g <Space> [ <C-W> <Plug> ' ` z ]
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: <C-F>
on_key: <C-F>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) ` ' " g` g' g <Space> <Plug> z <C-W> ] [ z=
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:52)
  continue: g Mode(n:52)
  getchar
  got: k
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
  feedkeys: Mode(n:52) gk
on_key: g
on_key: k
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
on_key: n
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: ;
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: !
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:52)
  Trigger(del) Mode(n:52) z " g` g' ` ' z= g <Space> [ <Plug> ] <C-W>
BufEnter(6)
on_key: n
Trigger(add) Mode(n:52) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) g' z ] <C-W> ` ' " z= g [ g` <Space> <Plug>
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) g' z ] <C-W> ` ' " z= g [ g` <Space> <Plug>
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: k
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gk
on_key: g
on_key: k
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:6)
  continue: g Mode(n:6)
  getchar
  got: j
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
  feedkeys: Mode(n:6) gj
on_key: g
on_key: j
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: :
ModeChanged(n:c)
  new Mode(c:6)
  Safe(true)
Trigger(add) Mode(c:6) <C-R>
on_key: q
on_key: !
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) ` <C-W> ] z <Plug> [ <Space> g z= g' g` " '
BufEnter(19)
on_key: <CR>
Trigger(add) Mode(n:6) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
on_key: :
ModeChanged(n:c)
  new Mode(c:19)
  Safe(true)
Trigger(add) Mode(c:19) <C-R>
on_key: q
on_key: !
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:19)
  Trigger(del) Mode(n:19) z <C-W> ' " g` g' [ <Plug> ] <Space> z= ` g
Trigger(add) Mode(n:19) ` ' " g` g' z= g <Space> [ <Plug> z ] <C-W>
BufEnter(14)
  new Mode(i:14)
Trigger(add) Mode(i:14) <C-R>
new Mode(n:14)
Trigger(add) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
on_key: /
ModeChanged(n:c)
  new Mode(c:14)
  Safe(true)
Trigger(add) Mode(c:14) <C-R>
on_key: w
on_key: i
on_key: n
on_key: d
on_key: o
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:14)
  Trigger(del) Mode(n:14) g' <Plug> ] [ <Space> z <C-W> ' " ` z= g g`
Trigger(add) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
on_key: V
ModeChanged(n:V)
  new Mode(x:14)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:14)
    continue:  Mode(x:14)
    getchar
    Trigger(add) Mode(x:14) " ] [ <C-W> z g
    on_key: j
    got: j
    suspend: Mode(x:14)
    Trigger(del) Mode(x:14) g z <C-W> [ ] "
    feedkeys: Mode(x:14) j
on_key: j
Trigger(add) Mode(x:14) " ] [ <C-W> z g
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:14)
  continue: g Mode(x:14)
  getchar
  got: j
  suspend: Mode(x:14)
  Trigger(del) Mode(x:14) g z <C-W> [ ] "
  feedkeys: Mode(x:14) gj
on_key: g
on_key: j
Trigger(add) Mode(x:14) " ] [ <C-W> z g
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:14)
  continue: g Mode(x:14)
  getchar
  got: j
  suspend: Mode(x:14)
  Trigger(del) Mode(x:14) z ] " [ <C-W> g
  feedkeys: Mode(x:14) gj
on_key: g
on_key: j
Trigger(add) Mode(x:14) " ] [ <C-W> z g
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:14)
  continue: g Mode(x:14)
  getchar
  got: j
  suspend: Mode(x:14)
  Trigger(del) Mode(x:14) z ] " [ <C-W> g
  feedkeys: Mode(x:14) gj
on_key: g
on_key: j
Trigger(add) Mode(x:14) " ] [ <C-W> z g
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:14)
  Trigger(del) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
Trigger(add) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
BufNew(15)
ModeChanged(n:c)
  Safe(true)
on_key: y
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:14)
  Trigger(del) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
Trigger(add) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
BufNew(16)
BufEnter(16)
  new Mode(n:16)
Trigger(add) Mode(n:16) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
BufNew(17)
BufNew(18)
on_key: <LeftRelease>
on_key: q
BufEnter(14)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:14)
  Trigger(del) Mode(n:14) g` g' <Plug> ' <C-W> " ` z= ] [ <Space> z g
Trigger(add) Mode(n:14) ' " ` z= g` g' <Plug> ] [ <Space> z <C-W> g
BufEnter(10)
  new Mode(i:10)
Trigger(add) Mode(i:10) <C-R>
new Mode(n:10)
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gg
on_key: g
on_key: g
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(11)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(12)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(13)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(14)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(15)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(16)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(17)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(18)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(19)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(20)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(21)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(22)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(23)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(24)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(25)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(26)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(27)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(28)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(29)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(30)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(31)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(32)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(33)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(34)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(35)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(36)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(37)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(38)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(39)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(40)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(41)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(42)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(43)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(44)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(45)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(46)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(47)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(48)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(49)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(50)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(51)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(52)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(53)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(54)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(55)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(56)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(57)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(58)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(59)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(60)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(61)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(62)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(63)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(64)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(65)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(66)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(67)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(68)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(69)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(70)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(71)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(72)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(73)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(74)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(75)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(76)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(77)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(78)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(79)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(80)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(81)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(82)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(83)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(84)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(85)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(86)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(87)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(88)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(89)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(90)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(91)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(92)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(93)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(94)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(95)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(96)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(97)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(98)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(99)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(100)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(101)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(102)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(103)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(104)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(105)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(106)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(107)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(108)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(109)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(110)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(111)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(112)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(113)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(114)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(115)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(116)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(117)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(118)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(119)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(120)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(121)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(122)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(123)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(124)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(125)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(126)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(127)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(128)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(129)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(130)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(131)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(132)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(133)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(134)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(135)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(136)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(137)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(138)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(139)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(140)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(141)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(142)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(143)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(144)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(145)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(146)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(147)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(148)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(149)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(150)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(151)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(152)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(153)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(154)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(155)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(156)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(157)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(158)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(159)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(160)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(161)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(162)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(163)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(164)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(165)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(166)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(167)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(168)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(169)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(170)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(171)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(172)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(173)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(174)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(175)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(176)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(177)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(178)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(179)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(180)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(181)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  BufNew(182)
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: :
  ModeChanged(n:c)
    new Mode(c:10)
    Safe(true)
  Trigger(add) Mode(c:10) <C-R>
  on_key: q
  on_key: <CR>
  ModeChanged(c:n)
    Unsafe(command-mode)
    suspend: Mode(n:10)
    Trigger(del) Mode(n:10) z ` ' " g' g` z= g <Space> <Plug> ] [ <C-W>
  Trigger(add) Mode(n:10) ` ' " g' g` z= g <Space> <Plug> ] [ <C-W> z


Debug Started for v3.13.2
new Mode(n:1)
Trigger(add) Mode(n:1) ' ` z= g` g' <Space> <Plug> [ z g ] <C-W>


Debug Started for v3.13.2
new Mode(n:1)
Trigger(add) Mode(n:1) ' ` g' g` z= <Plug> [ <C-W> g z <Space> ]
BufEnter(35)
  new Mode(i:35)
new Mode(n:35)
Trigger(add) Mode(n:35) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <LeftRelease>
on_key: H
ModeChanged(n:c)
  new Mode(c:35)
  Unsafe(pending "b")
  suspend: Mode(c:35)
ModeChanged(c:n)
  cooldown
BufEnter(10)
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: b
on_key: b
on_key: l
on_key: l
on_key: c
ModeChanged(n:no)
  new Mode(o:10)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:10)
    continue:  Mode(o:10)
    getchar
    Trigger(add) Mode(o:10) g ] [
    on_key: w
    got: w
    suspend: Mode(o:10)
    Trigger(del) Mode(o:10) [ g ]
    feedkeys: Mode(o:10) w
on_key: w
ModeChanged(no:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:10)
Trigger(add) Mode(o:10) g ] [
on_key: f
on_key: f
on_key: c
BufNew(36)
on_key: f
on_key: 0
on_key: 0
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: b
on_key: c
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:10)
    continue:  Mode(o:10)
    getchar
    on_key: w
    got: w
    suspend: Mode(o:10)
    Trigger(del) Mode(o:10) [ g ]
    feedkeys: Mode(o:10) w
on_key: w
ModeChanged(no:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:10)
Trigger(add) Mode(o:10) g ] [
on_key: f
on_key: f
on_key: c
on_key: f
on_key: 0
on_key: 0
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  new Mode(c:10)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <C-L>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <LeftRelease>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: b
on_key: y
ModeChanged(n:no)
  Unsafe(pending "i")
  suspend: Mode(o:10)
  Trigger(del) Mode(o:10) [ g ]
on_key: i
on_key: '
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:10) g ] [
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: P
on_key: l
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:10)
    continue:  Mode(o:10)
    getchar
    on_key: t
    got: t
    suspend: Mode(o:10)
    Trigger(del) Mode(o:10) [ g ]
    feedkeys: Mode(o:10) t
on_key: t
Trigger(add) Mode(o:10) g ] [
on_key: '
ModeChanged(no:n)
  Unsafe(pending "m")
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: y
ModeChanged(n:no)
  Unsafe(pending "i")
  suspend: Mode(o:10)
  Trigger(del) Mode(o:10) [ g ]
on_key: i
on_key: '
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:10) g ] [
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: P
on_key: l
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:10)
    continue:  Mode(o:10)
    getchar
    on_key: t
    got: t
    suspend: Mode(o:10)
    Trigger(del) Mode(o:10) [ g ]
    feedkeys: Mode(o:10) t
on_key: t
Trigger(add) Mode(o:10) g ] [
on_key: '
ModeChanged(no:n)
  Unsafe(pending "m")
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <C-L>
on_key: <C-L>
on_key: <LeftRelease>
on_key: 2
on_key: 6
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) 26gk
on_key: 2
on_key: 6
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: y
ModeChanged(n:no)
  Unsafe(pending "y")
  suspend: Mode(o:10)
  Trigger(del) Mode(o:10) [ g ]
on_key: y
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:10) g ] [
on_key: p
on_key: e
on_key: e
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: 0
on_key: i
ModeChanged(n:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:10)
on_key: #
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: l
on_key: e
on_key: e
on_key: e
on_key: l
on_key: l
on_key: c
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:10)
    continue:  Mode(o:10)
    getchar
    on_key: w
    got: w
    suspend: Mode(o:10)
    Trigger(del) Mode(o:10) [ g ]
    feedkeys: Mode(o:10) w
on_key: w
ModeChanged(no:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:10)
Trigger(add) Mode(o:10) g ] [
on_key: 6
on_key: 2
on_key: 3
on_key: 3
on_key: 5
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: u
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:10)
    continue:  Mode(o:10)
    getchar
    on_key: d
    got: d
    suspend: Mode(o:10)
    Trigger(del) Mode(o:10) [ g ]
    feedkeys: Mode(o:10) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:10) g ] [
on_key: <C-L>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: r
  got: r
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
  feedkeys: Mode(n:10) <Space>fr
on_key: <Space>fr
BufNew(41)
BufNew(42)
BufNew(43)
BufNew(44)
BufNew(45)
BufNew(46)
BufEnter(45)
  new Mode(n:45)
ModeChanged(n:i)
  new Mode(i:45)
  Unsafe(pending "<80>")
  suspend: Mode(i:45)
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
Trigger(add) Mode(n:45) ' ` z= g` g' z g <Space> ] [ <C-W> <Plug>
BufNew(47)
on_key: <Up>
BufNew(48)
on_key: <Up>
BufNew(49)
on_key: <Up>
BufNew(50)
on_key: <Up>
BufNew(51)
on_key: <Up>
BufNew(52)
on_key: <Up>
BufNew(53)
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <Up>
on_key: <Esc>
BufEnter(10)
ModeChanged(i:n)
  Safe(true)
on_key: <C-L>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: u
on_key: u
on_key: u
on_key: u
on_key: u
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: u
on_key: u
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: u
on_key: u
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: j
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gj
on_key: g
on_key: j
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:10)
  continue: g Mode(n:10)
  getchar
  got: k
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) gk
on_key: g
on_key: k
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: u
on_key: <C-R>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:10)
ModeChanged(c:n)
  cooldown
on_key: <LeftDrag>
on_key: <LeftRelease>
ModeChanged(n:v)
  new Mode(x:10)
  Unsafe(pending "<80><fd>.")
  suspend: Mode(x:10)
Trigger(add) Mode(x:10) " z g [ <C-W> ]
on_key: <Esc>
ModeChanged(v:n)
  Safe(true)
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:10)
ModeChanged(c:n)
  cooldown
on_key: <Esc>
ModeChanged(n:c)
  cooldown
ModeChanged(c:n)
  cooldown
on_key: <Esc>
ModeChanged(n:c)
  cooldown
ModeChanged(c:n)
  cooldown
on_key: <Esc>
ModeChanged(n:c)
  cooldown
ModeChanged(c:n)
  cooldown
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:10)
ModeChanged(c:n)
  cooldown
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
Trigger(add) Mode(n:10) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:10)
ModeChanged(c:n)
  cooldown
on_key: <LeftRelease>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:10)
  continue: <Space> Mode(n:10)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:10)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:10)
  Trigger(del) Mode(n:10) ` z= g` g' <Plug> z g <Space> ] [ <C-W> '
  feedkeys: Mode(n:10) <Space>fb
on_key: <Space>fb
BufNew(67)
BufNew(68)
BufNew(69)
BufNew(70)
BufNew(71)
BufNew(72)
BufEnter(71)
  new Mode(i:71)
ModeChanged(i:n)
  new Mode(n:71)
  Unsafe(pending "^[")
  suspend: Mode(n:71)
ModeChanged(n:i)
  cooldown
Trigger(add) Mode(n:71) ' ` z= g` g' <Plug> z ] g <Space> [ <C-W>
BufNew(73)
on_key: m
BufNew(74)
on_key: a
BufNew(75)
on_key: p
on_key: p
on_key: i
on_key: n
on_key: <BS>
on_key: <BS>
on_key: <Down>
BufNew(76)
on_key: <Down>
BufNew(77)
on_key: <Down>
on_key: <Down>
on_key: <Up>
on_key: <CR>
BufEnter(10)
BufNew(78)
BufReadPost(78)
BufEnter(78)
  new Mode(i:78)
new Mode(n:78)
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: /
ModeChanged(n:c)
  new Mode(c:78)
  Safe(true)
on_key: j
on_key: k
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:78)
  continue: g Mode(n:78)
  getchar
  got: j
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
  feedkeys: Mode(n:78) gj
on_key: g
on_key: j
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
on_key: 0
on_key: i
ModeChanged(n:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:78)
on_key: -
on_key: -
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:78)
  Trigger(del) Mode(n:78) <C-W> z= ] <Space> g z ' <Plug> ` g' g` [
Trigger(add) Mode(n:78) ' ` z= g` g' <Plug> z g <Space> ] [ <C-W>
BufEnter(17)
  new Mode(i:17)
new Mode(n:17)
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gg
on_key: g
on_key: g
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <Plug> ` <C-W> ' g` g' z= z g ] [ <Space>
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  continue: g Mode(n:17)
  getchar
  got: j
  suspend: Mode(n:17)
  Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  feedkeys: Mode(n:17) gj
on_key: g
on_key: j
Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(18)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(19)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(20)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(21)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(22)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(23)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(24)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(25)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(26)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(27)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(28)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(29)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(30)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(31)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(32)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(33)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(34)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(35)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(36)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(37)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(38)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(39)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(40)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(41)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(42)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(43)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(44)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(45)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(46)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(47)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(48)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(49)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(50)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(51)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(52)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(53)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(54)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(55)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(56)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(57)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(58)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(59)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(60)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(61)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(62)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(63)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(64)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(65)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(66)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(67)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(68)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(69)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(70)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(71)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(72)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(73)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(74)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(75)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(76)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(77)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(78)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(79)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(80)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(81)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(82)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(83)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(84)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(85)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(86)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(87)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(88)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(89)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(90)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(91)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(92)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(93)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(94)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(95)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(96)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(97)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(98)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(99)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(100)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(101)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(102)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(103)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(104)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(105)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(106)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(107)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(108)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(109)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(110)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(111)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(112)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(113)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(114)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(115)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(116)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(117)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(118)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(119)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(120)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(121)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(122)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(123)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(124)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(125)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(126)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(127)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(128)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(129)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(130)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(131)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(132)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(133)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(134)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(135)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(136)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(137)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(138)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(139)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(140)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(141)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(142)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(143)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(144)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(145)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(146)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(147)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(148)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(149)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(150)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(151)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(152)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(153)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(154)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(155)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(156)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(157)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(158)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(159)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(160)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(161)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(162)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(163)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(164)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(165)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(166)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(167)
  recursion detected. Aborting
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:17)
  BufNew(168)
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: <C-C>
  on_key: :
  ModeChanged(n:c)
    new Mode(c:17)
    Safe(true)
  on_key: q
  on_key: <CR>
  ModeChanged(c:n)
    Unsafe(command-mode)
    suspend: Mode(n:17)
    Trigger(del) Mode(n:17) <C-W> <Plug> ` <Space> ' g` g' z= z g ] [
  Trigger(add) Mode(n:17) ` ' g` g' z= g <C-W> z ] [ <Plug> <Space>
BufEnter(11)
  new Mode(i:11)
new Mode(n:11)
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: h
on_key: h
on_key: x
ModeChanged(n:no)
  new Mode(o:11)
  Unsafe(pending "l")
  suspend: Mode(o:11)
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:11) g [ ]
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:11)
  Trigger(del) Mode(o:11) [ ] g
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:11) g [ ]
on_key: :
ModeChanged(n:c)
  new Mode(c:11)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:11)
ModeChanged(c:n)
  cooldown
on_key: G
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: j
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gj
on_key: g
on_key: j
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: i
ModeChanged(n:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:11)
on_key: <C-L>
on_key: <C-L>
on_key: <C-L>
on_key: <C-L>
on_key: <C-L>
on_key: j
on_key: k
on_key: k
on_key: j
on_key: k
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:11)
ModeChanged(c:n)
  cooldown
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:11)
    continue:  Mode(o:11)
    getchar
    on_key: d
    got: d
    suspend: Mode(o:11)
    Trigger(del) Mode(o:11) [ ] g
    feedkeys: Mode(o:11) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:11) g [ ]
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:11)
  continue: <Space> Mode(n:11)
  getchar
  on_key: w
  got: w
  continue: <Space>w Mode(n:11)
  getchar
  on_key: <Esc>
  got: <Esc>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:11)
  continue: <Space> Mode(n:11)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:11)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:11)
  continue: g Mode(n:11)
  getchar
  got: k
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) gk
on_key: g
on_key: k
Trigger(add) Mode(n:11) ' ` z= g' g` <C-W> ] [ <Plug> z g <Space>
on_key: <C-F>
on_key: <C-B>
on_key: <C-B>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:11)
  continue: <Space> Mode(n:11)
  getchar
  on_key: w
  got: w
  continue: <Space>w Mode(n:11)
  getchar
  on_key: w
  got: w
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) g <Space> ' ` z= g' g` <C-W> ] [ <Plug> z
  feedkeys: Mode(n:11) <Space>ww
on_key: <Space>ww
BufNew(14)
BufReadPost(14)
BufEnter(15)
  new Mode(i:15)
new Mode(n:15)
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: <Down>
ModeChanged(n:c)
  new Mode(c:15)
  Unsafe(pending "r")
  suspend: Mode(c:15)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:15)
ModeChanged(c:n)
  cooldown
on_key: <Up>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:15)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:15)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:15)
ModeChanged(c:n)
  cooldown
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: j
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gj
on_key: g
on_key: j
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: j
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gj
on_key: g
on_key: j
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: j
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gj
on_key: g
on_key: j
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: j
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gj
on_key: g
on_key: j
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: k
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gk
on_key: g
on_key: k
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: k
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gk
on_key: g
on_key: k
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: k
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gk
on_key: g
on_key: k
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:15)
  continue: g Mode(n:15)
  getchar
  got: j
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
  feedkeys: Mode(n:15) gj
on_key: g
on_key: j
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: /
ModeChanged(n:c)
  Safe(true)
on_key: j
on_key: k
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
Trigger(add) Mode(n:15) ' ` z= g' g` [ <Space> z g ] <C-W> <Plug>
on_key: n
on_key: n
on_key: n
on_key: n
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) ` z= g' g` [ <Space> <Plug> <C-W> ] g z '
BufNew(185)
BufNew(186)
BufNew(187)
BufNew(188)
BufNew(189)
BufNew(190)
BufEnter(189)
  new Mode(i:189)
ModeChanged(i:n)
  new Mode(n:189)
  Unsafe(pending "^[")
  suspend: Mode(n:189)
ModeChanged(n:i)
  cooldown
Trigger(add) Mode(n:189) ' ` g` g' z= <Space> g ] [ <C-W> z <Plug>
BufNew(191)
on_key: t
BufNew(192)
on_key: e
BufNew(193)
on_key: l
on_key: e
on_key: <Down>
BufNew(194)
on_key: <Down>
BufNew(195)
on_key: <Down>
BufNew(196)
on_key: <Down>
BufNew(197)
on_key: <Down>
BufNew(198)
on_key: <Down>
BufNew(199)
on_key: <Down>
BufNew(200)
on_key: <Down>
BufNew(201)
on_key: <Down>
BufNew(202)
on_key: <Down>
BufNew(203)
on_key: <Down>
BufNew(204)
on_key: <Down>
BufNew(205)
on_key: <Down>
BufNew(206)
on_key: <Down>
BufNew(207)
on_key: <Down>
BufNew(208)
on_key: <Down>
BufNew(209)
on_key: <Down>
BufNew(210)
on_key: <Down>
BufNew(211)
on_key: <Down>
BufNew(212)
on_key: <Down>
BufNew(213)
on_key: <Down>
BufNew(214)
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <Up>
on_key: <Up>
on_key: <CR>
BufEnter(119)
BufNew(215)
BufReadPost(215)
BufEnter(215)
  new Mode(i:215)
new Mode(n:215)
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gg
on_key: g
on_key: g
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: k
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gk
on_key: g
on_key: k
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) gj
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: z
State(start): Mode(n:0) Node(z) { keys = "z" }
  update Mode(n:215)
  continue: z Mode(n:215)
  getchar
  on_key: <CR>
  got: <CR>
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) z<CR>
on_key: z
on_key: <CR>
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: 3
on_key: 6
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:215)
  continue: g Mode(n:215)
  getchar
  got: j
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
  feedkeys: Mode(n:215) 36gj
on_key: 3
on_key: 6
on_key: g
on_key: j
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: i
ModeChanged(n:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:215)
on_key: -
on_key: -
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  new Mode(c:215)
  Safe(true)
on_key: w
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:215)
  Trigger(del) Mode(n:215) g ] [ <C-W> z <Plug> <Space> z= g' ' ` g`
BufEnter(66)
on_key: <CR>
Trigger(add) Mode(n:215) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:66)
  Trigger(del) Mode(n:66) z= <Space> ] <C-W> z <Plug> ` g [ g' g` '
on_key: <CR>
Trigger(add) Mode(n:66) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: !
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:66)
  Trigger(del) Mode(n:66) z= <Space> ] <C-W> z <Plug> ` g [ g' g` '
BufEnter(96)
on_key: <CR>
Trigger(add) Mode(n:66) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: !
on_key: <BS>
on_key: 1
on_key: <BS>
on_key: q
on_key: !
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:96)
  Trigger(del) Mode(n:96) ` ' <Space> g ] [ <C-W> z z= <Plug> g' g`
Trigger(add) Mode(n:96) ` ' g` g' z= <Space> g ] [ <C-W> z <Plug>
BufEnter(5)
  new Mode(n:5)
Trigger(add) Mode(n:5) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <Down>
ModeChanged(n:c)
  new Mode(c:5)
  Unsafe(pending "r")
  suspend: Mode(c:5)
ModeChanged(c:n)
  cooldown
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:5)
  continue: g Mode(n:5)
  getchar
  got: j
  suspend: Mode(n:5)
  Trigger(del) Mode(n:5) z <C-W> [ ] <Space> ` ' g` g' z= <Plug> g
  feedkeys: Mode(n:5) gj
on_key: g
on_key: j
Trigger(add) Mode(n:5) ` ' g` g' z= <Plug> g z <Space> ] [ <C-W>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:5)
  continue: g Mode(n:5)
  getchar
  got: j
  suspend: Mode(n:5)
  Trigger(del) Mode(n:5) z <C-W> [ ] <Space> ` ' g` g' z= <Plug> g
  feedkeys: Mode(n:5) gj
on_key: g
on_key: j
Trigger(add) Mode(n:5) ` ' g` g' z= <Plug> g z <Space> ] [ <C-W>
on_key: <CR>
ModeChanged(n:c)
  Unsafe(pending "^U")
  suspend: Mode(c:5)
ModeChanged(c:n)
  cooldown
BufNew(6)
BufEnter(6)
  new Mode(n:6)
Trigger(add) Mode(n:6) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: w
on_key: h
on_key: i
ModeChanged(n:c)
  new Mode(c:6)
  Unsafe(pending "^U")
  suspend: Mode(c:6)
ModeChanged(c:n)
  cooldown
on_key: c
ModeChanged(n:no)
  new Mode(o:6)
  cooldown
on_key: h
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:6) g ] [
on_key: /
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: h
on_key: i
on_key: c
on_key: h
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:6)
  Trigger(del) Mode(n:6) g <Space> ] [ <C-W> z g' g` ' ` <Plug> z=
Trigger(add) Mode(n:6) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <CR>
ModeChanged(n:c)
  Unsafe(pending "^U")
  suspend: Mode(c:6)
ModeChanged(c:n)
  cooldown
BufNew(7)
BufReadPost(7)
BufEnter(7)
  new Mode(n:7)
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gg
on_key: g
on_key: g
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: j
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gj
on_key: g
on_key: j
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: b
on_key: b
on_key: b
on_key: b
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: j
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gj
on_key: g
on_key: j
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: 0
on_key: w
on_key: i
ModeChanged(n:i)
  new Mode(i:7)
  Unsafe(pending "<80>")
  suspend: Mode(i:7)
on_key: -
on_key: -
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:7)
  continue: <Space> Mode(n:7)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:7)
  getchar
  on_key: s
  got: s
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) <Space>fs
on_key: <Space>fs
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: j
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gj
on_key: g
on_key: j
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: j
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gj
on_key: g
on_key: j
on_key: k
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: k
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gk
on_key: g
on_key: k
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: :
ModeChanged(n:c)
  new Mode(c:7)
  Safe(true)
on_key: h
on_key: <BS>
on_key: H
on_key: <Space>
on_key: w
on_key: h
on_key: i
on_key: c
on_key: h
on_key: <Tab>
on_key: <Tab>
on_key: <Tab>
on_key: -
on_key: k
on_key: e
on_key: y
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:7)
  continue: <Space> Mode(n:7)
  getchar
  on_key: b
  got: b
  continue: <Space>b Mode(n:7)
  getchar
  on_key: <Esc>
  got: <Esc>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:7)
  continue: <Space> Mode(n:7)
  getchar
  on_key: w
  got: w
  continue: <Space>w Mode(n:7)
  getchar
  on_key: q
  got: q
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) <Space>wq
on_key: <Space>wq
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: h
on_key: <Space>
on_key: w
on_key: h
on_key: i
on_key: <Tab>
on_key: c
on_key: h
on_key: <Tab>
on_key: <C-N>
on_key: <C-N>
on_key: <C-N>
on_key: <C-N>
on_key: <C-K>
on_key: <C-K>
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <Tab>
on_key: <Tab>
on_key: <Tab>
on_key: <BS>
on_key: <BS>
on_key: y
on_key: .
on_key: n
on_key: v
on_key: i
on_key: m
on_key: .
on_key: t
on_key: x
on_key: t
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: h
on_key: <Space>
on_key: h
on_key: <BS>
on_key: w
on_key: h
on_key: i
on_key: c
on_key: h
on_key: <Tab>
on_key: <C-N>
on_key: <C-N>
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> ] [ <C-W> z g <Plug> z= g' g` ' `
BufNew(12)
BufEnter(12)
  new Mode(n:12)
BufNew(12)
BufReadPost(12)
BufEnter(12)
  new Mode(n:12)
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: /
ModeChanged(n:c)
  new Mode(c:12)
  Safe(true)
on_key: i
on_key: g
on_key: n
on_key: o
on_key: r
on_key: e
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <C-K>
BufEnter(7)
on_key: <C-J>
BufEnter(12)
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: /
ModeChanged(n:c)
  Safe(true)
on_key: m
on_key: o
on_key: s
on_key: t
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <LeftRelease>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: k
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gk
on_key: g
on_key: k
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:12)
  continue: g Mode(n:12)
  getchar
  got: j
  suspend: Mode(n:12)
  Trigger(del) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  feedkeys: Mode(n:12) gj
on_key: g
on_key: j
Trigger(add) Mode(n:12) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <C-F>
on_key: <C-K>
BufEnter(7)
on_key: a
ModeChanged(n:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:7)
on_key: j
on_key: j
on_key: <C-C>
on_key: <C-C>
ModeChanged(i:n)
  Safe(true)
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: j
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> z <C-W> [ ] g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gj
on_key: g
on_key: j
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:7)
  continue: g Mode(n:7)
  getchar
  got: k
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> z <C-W> [ ] g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) gk
on_key: g
on_key: k
Trigger(add) Mode(n:7) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: u
on_key: <C-A>
on_key: <Esc>
ModeChanged(n:c)
  Unsafe(pending "n")
  suspend: Mode(c:7)
ModeChanged(c:n)
  cooldown
on_key: <C-J>
BufEnter(12)
on_key: <C-K>
BufEnter(7)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:7)
  continue: <Space> Mode(n:7)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:7)
  getchar
  on_key: b
  got: b
  suspend: Mode(n:7)
  Trigger(del) Mode(n:7) <Space> z <C-W> [ ] g <Plug> z= g' g` ' `
  feedkeys: Mode(n:7) <Space>fb
on_key: <Space>fb
BufEnter(7)
BufNew(24)
BufReadPost(24)
BufEnter(24)
  new Mode(i:24)
new Mode(n:24)
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <Down>
ModeChanged(n:c)
  new Mode(c:24)
  Unsafe(pending "r")
  suspend: Mode(c:24)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:24)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:24)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:24)
ModeChanged(c:n)
  cooldown
on_key: <Down>
ModeChanged(n:c)
  Unsafe(pending "r")
  suspend: Mode(c:24)
ModeChanged(c:n)
  cooldown
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gg
on_key: g
on_key: g
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <C-F>
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z ] <Space> g <Plug> z= g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: j
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: j
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gj
on_key: g
on_key: j
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: G
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: 0
on_key: <C-V>
ModeChanged(n:)
  new Mode(x:24)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:24)
    continue:  Mode(x:24)
    getchar
    Trigger(add) Mode(x:24) " g ] [ <C-W> z
    on_key: G
    got: G
    suspend: Mode(x:24)
    Trigger(del) Mode(x:24) z <C-W> [ ] g "
    feedkeys: Mode(x:24) G
on_key: G
Trigger(add) Mode(x:24) " g ] [ <C-W> z
on_key: I
ModeChanged(:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:24)
on_key: K
on_key: <BS>
on_key: -
on_key: -
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: k
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:24)
  continue: g Mode(n:24)
  getchar
  got: k
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
  feedkeys: Mode(n:24) gk
on_key: g
on_key: k
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
on_key: <C-V>
ModeChanged(n:)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = true }
    update Mode(x:24)
    continue:  Mode(x:24)
    getchar
    on_key: j
    got: j
    suspend: Mode(x:24)
    Trigger(del) Mode(x:24) z <C-W> [ ] g "
    feedkeys: Mode(x:24) j
on_key: j
Trigger(add) Mode(x:24) " g ] [ <C-W> z
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:24)
  continue: g Mode(x:24)
  getchar
  got: j
  suspend: Mode(x:24)
  Trigger(del) Mode(x:24) z <C-W> [ ] g "
  feedkeys: Mode(x:24) gj
on_key: g
on_key: j
Trigger(add) Mode(x:24) " g ] [ <C-W> z
on_key: j
State(start): Mode(x:0) Node(g) { keys = "g" }
  update Mode(x:24)
  continue: g Mode(x:24)
  getchar
  got: j
  suspend: Mode(x:24)
  Trigger(del) Mode(x:24) z <C-W> [ ] g "
  feedkeys: Mode(x:24) gj
on_key: g
on_key: j
Trigger(add) Mode(x:24) " g ] [ <C-W> z
on_key: I
ModeChanged(:i)
  Unsafe(pending "<80>")
  suspend: Mode(i:24)
on_key: -
on_key: -
on_key: jk
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:24)
  Trigger(del) Mode(n:24) [ <C-W> z g z= ] <Space> <Plug> g' g` ' `
Trigger(add) Mode(n:24) ` ' g` g' z= <Plug> g <Space> ] [ <C-W> z
  BufEnter(183)
    new Mode(i:183)
  new Mode(n:183)
  Trigger(add) Mode(n:183) ` ' z= g' g` <Space> ] [ <C-W> z g <Plug>
  on_key: o
  ModeChanged(n:i)
    Unsafe(pending "<80>")
    suspend: Mode(i:183)
  on_key: jk
  ModeChanged(i:n)
    Safe(true)
  on_key: p
  on_key: w
  on_key: w
  on_key: c
  ModeChanged(n:no)
    new Mode(o:183)
    Safe(true)
    State(start): Mode(o:0) Node() { defer = false }
      update Mode(o:183)
      continue:  Mode(o:183)
      getchar
      Trigger(add) Mode(o:183) g [ ]
      on_key: w
      got: w
      suspend: Mode(o:183)
      Trigger(del) Mode(o:183) ] [ g
      feedkeys: Mode(o:183) w
  on_key: w
  ModeChanged(no:i)
    Unsafe(pending "<80>")
    suspend: Mode(i:183)
  Trigger(add) Mode(o:183) g [ ]
  on_key: f
  on_key: a
  on_key: l
  on_key: s
  on_key: e
  on_key: jk
  ModeChanged(i:n)
    Safe(true)
  on_key: A
  ModeChanged(n:i)
    Unsafe(pending "<80>")
    suspend: Mode(i:183)
  on_key: <BS>
  on_key: jk
  ModeChanged(i:n)
    Safe(true)
  on_key: <Space>
  State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
    update Mode(n:183)
    continue: <Space> Mode(n:183)
    getchar
    on_key: f
    got: f
    continue: <Space>f Mode(n:183)
    getchar
    on_key: s
    got: s
    suspend: Mode(n:183)
    Trigger(del) Mode(n:183) <Plug> g z <C-W> [ ] ` ' z= g' g` <Space>
    feedkeys: Mode(n:183) <Space>fs
  on_key: <Space>fs
  Trigger(add) Mode(n:183) ` ' z= g' g` <Space> ] [ <C-W> z g <Plug>
  on_key: :
  ModeChanged(n:c)
    new Mode(c:183)
    Safe(true)
  on_key: w
  on_key: q
  on_key: <CR>
  ModeChanged(c:n)
    Unsafe(command-mode)
    suspend: Mode(n:183)
    Trigger(del) Mode(n:183) <Plug> g z <C-W> [ ] ` ' z= g' g` <Space>
  Trigger(add) Mode(n:183) ` ' z= g' g` <Space> ] [ <C-W> z g <Plug>
